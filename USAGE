There are 2 ways the MVC plugin may be used: generating pages within
the site (that is to say, outside the admin panel); and generating
admin panel pages.


==Site Pages==
Site pages to be generated by WPMVC can be called by prepending /r/ to
the route path. By the default, there is a route defined as

/controller(/action(/id))

The parenthesis indicates that the parameters are optional. Now, let's
say you have a controller named CarsController with action named index
and a view /cars/index.html, you can invoke this view by going to

http://www.example.com/r/cars/index

The "r" prefix can also be changed by editing wpmvc_handler.php and
.htaccess. I can assume that you can do this because you are using this
plugin to make plugins; ergo, you are a programmer.

Now let's do some changes to our Hello World plugin. Go to
/wp-content/plugins/hello-world/classes/controllers and create a new
file HelloworldController.php and put this

<?php

class HelloworldController extends Controller {
    
    function greet()
    {
        $this->set('message', _('Hello World'));
    }
}

?>

Go to /wp-content/plugins/hello-world/views and create a new folder
helloworld. Inside the helloworld folder, create a new file greet.html
and put this

<div class="wrap">
    <?php echo $message ?>
</div>

Now go to http://www.example.com/r/helloworld/greet and see the message.


==Admin Pages==
You can also make admin pages for your plugin But instead of prefixing
the route with /r/, you pass the route to admin.php as a GET parameter
named page. This makes our wpmvc plugin page act as a page added
through add_menu_page.

Using our last example go to

http://www.example.com/wp-admin/admin.php?page=helloworld/greet

and see your message :)